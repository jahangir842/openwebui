Bootstrap: docker
From: ghcr.io/open-webui/open-webui:cuda

%post
    # Install the missing hf_xet package
    pip install huggingface_hub[hf_xet] || pip install hf_xet

    # Create a custom startup script that handles all data paths properly
    cat > /usr/local/bin/start-webui.sh << 'EOF'
#!/bin/bash
set -e

# Create necessary directories in the bound volume
mkdir -p /data/config
mkdir -p /data/models
mkdir -p /data/avatars
mkdir -p /data/cache
mkdir -p /data/cache/embedding/models
mkdir -p /data/static

# Set environment variables
export HOST="${HOST:-0.0.0.0}"
export PORT="${PORT:-8080}"
export PYTHONPATH="/app:/app/backend:$PYTHONPATH"
export WEBUI_SECRET_KEY="${WEBUI_SECRET_KEY:-openwebui_default_secret_key}"

# Database and data directories must point to the bound volume
export DATA_DIR="/data"
export DB_FILE="/data/database.sqlite"
export CONFIG_DIR="/data/config"
export MODELS_DIR="/data/models"
export AVATARS_DIR="/data/avatars"

# Set cache directories to use the bound volume
export HF_HOME="/data/cache"
export TRANSFORMERS_CACHE="/data/cache/embedding/models"
export HF_DATASETS_CACHE="/data/cache/datasets"
export HUGGINGFACE_HUB_CACHE="/data/cache/embedding/models"
export SENTENCE_TRANSFORMERS_HOME="/data/cache/embedding"
export XDG_CACHE_HOME="/data/cache"

# CUDA setup
if command -v nvidia-smi &> /dev/null; then
    echo "CUDA is enabled, configuring GPU access..."
    export LD_LIBRARY_PATH="/usr/local/lib/python3.11/site-packages/torch/lib:${LD_LIBRARY_PATH}"
fi

echo "Starting Open WebUI with:"
echo "- DATABASE: $DB_FILE"
echo "- HOST: $HOST PORT: $PORT"
echo "- DATA_DIR: $DATA_DIR"
echo "- CACHE_DIR: $TRANSFORMERS_CACHE"

# Check if the data directory is writable
if [ -w "$DATA_DIR" ]; then
    echo "✅ Data directory is writable"
else
    echo "❌ ERROR: Data directory is not writable!"
    echo "Please run with: singularity run --nv -B /your/local/path:/data openwebui.sif"
    exit 1
fi

# Copy static files to the writable data directory
echo "Ensuring static files are available in writable location..."
if [ ! -d "/data/static" ] || [ -z "$(ls -A /data/static 2>/dev/null)" ]; then
    echo "Copying static files..."
    cp -r /app/backend/open_webui/static/* /data/static/ || echo "Warning: Could not copy static files"
fi

# Create a custom runner script to override the static directory
cat > /data/custom_server.py << 'PYEOF'
#!/usr/bin/env python3
import sys
import os
from pathlib import Path
import uvicorn
import importlib.util
import importlib

# Add backend to path so we can import from open_webui
sys.path.insert(0, "/app/backend")

# Import the actual application
from open_webui.main import app
from fastapi.staticfiles import StaticFiles

# Remove existing static route if present
for route in list(app.routes):
    if getattr(route, "name", None) == "static":
        app.routes.remove(route)
        print("Removed existing static route")

# Mount our custom static directory
print(f"Mounting static files from /data/static")
app.mount("/static", StaticFiles(directory="/data/static"), name="static")

# Get host and port from environment
host = os.environ.get("HOST", "0.0.0.0")
port = int(os.environ.get("PORT", "8080"))

# Start the server
if __name__ == "__main__":
    print(f"Starting server on {host}:{port}")
    uvicorn.run(app, host=host, port=port)
PYEOF

# Make the script executable
chmod +x /data/custom_server.py

echo "Starting custom server..."
# Use our custom server script
python /data/custom_server.py
EOF

    # Make it executable
    chmod +x /usr/local/bin/start-webui.sh

%environment
    export HOST=0.0.0.0
    export PORT=8080
    export CUDA_VISIBLE_DEVICES=0
    export HF_HOME="/data/cache"
    export TRANSFORMERS_CACHE="/data/cache/embedding/models"
    export HF_DATASETS_CACHE="/data/cache/datasets"
    export HUGGINGFACE_HUB_CACHE="/data/cache/embedding/models"
    export SENTENCE_TRANSFORMERS_HOME="/data/cache/embedding"
    export XDG_CACHE_HOME="/data/cache"

%startscript
    /usr/local/bin/start-webui.sh

%runscript
    /usr/local/bin/start-webui.sh

%help
    Open WebUI Singularity Container with CUDA support
    
    === REQUIRED COMMAND ===
    You MUST provide a bind mount for the data directory:
    
    singularity run --nv -B /your/local/path:/data openwebui.sif
    
    === EXAMPLES ===
    
    Run with basic configuration:
    singularity run --nv -B /home/user/openwebui-data:/data openwebui.sif
    
    Run on a different port:
    PORT=3000 singularity run --nv -B /home/user/openwebui-data:/data openwebui.sif
    
    === TROUBLESHOOTING ===
    If you encounter issues, try entering the container with:
    singularity shell --nv -B /your/local/path:/data openwebui.sif
    
    Then run the startup script manually:
    /usr/local/bin/start-webui.sh

%labels
    Author "Open WebUI Community"
    Version v0.6.5
    Cuda yes
